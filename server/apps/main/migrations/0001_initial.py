# Generated by Django 4.2.10 on 2024-03-01 23:11

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                (
                    'is_superuser',
                    models.BooleanField(
                        default=False,
                        help_text='Designates that this user has all permissions without explicitly assigning them.',
                        verbose_name='superuser status',
                    ),
                ),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                (
                    'is_staff',
                    models.BooleanField(
                        default=False,
                        help_text='Designates whether the user can log into this admin site.',
                        verbose_name='staff status',
                    ),
                ),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('chat_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=128, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('comment', models.CharField(max_length=128)),
                ('day', models.IntegerField(default=2)),
                ('legacy_id', models.BigIntegerField(null=True)),
            ],
            options={
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('city_id', models.CharField(editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'cities',
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('file_id', models.CharField(editable=False, primary_key=True, serialize=False)),
                ('telegram_file_id', models.CharField(max_length=128, null=True)),
                ('link', models.CharField(max_length=128, null=True)),
                ('created_at', models.DateTimeField()),
                ('filename', models.CharField(max_length=512, null=True)),
            ],
            options={
                'db_table': 'files',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('message_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('message_json', models.JSONField()),
                ('is_unknown', models.BooleanField()),
                ('trigger_message_id', models.BigIntegerField(null=True)),
            ],
            options={
                'db_table': 'messages',
            },
        ),
        migrations.CreateModel(
            name='Sura',
            fields=[
                ('sura_id', models.IntegerField(primary_key=True, serialize=False)),
                ('link', models.CharField(max_length=512)),
            ],
            options={
                'db_table': 'suras',
            },
        ),
        migrations.CreateModel(
            name='UserAction',
            fields=[
                ('user_action_id', models.BigAutoField(editable=False, primary_key=True, serialize=False)),
                ('date_time', models.DateTimeField()),
                ('action', models.CharField(max_length=16)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_actions',
            },
        ),
        migrations.CreateModel(
            name='Ayat',
            fields=[
                ('ayat_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('public_id', models.CharField(editable=False, unique=True)),
                ('day', models.IntegerField(null=True)),
                ('ayat_number', models.CharField(max_length=16)),
                ('content', models.TextField()),
                ('arab_text', models.TextField()),
                ('transliteration', models.TextField()),
                ('audio', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.file')),
                ('sura', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.sura')),
            ],
            options={
                'db_table': 'ayats',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='city',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='main.city'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(
                blank=True,
                help_text=' '.join([
                    'The groups this user belongs to. A user will get all permissions granted',
                    'to each of their groups.',
                ]),
                related_name='user_set',
                related_query_name='user',
                to='auth.group',
                verbose_name='groups',
            ),
        ),
        migrations.AddField(
            model_name='user',
            name='referrer_id',
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(
                blank=True,
                help_text='Specific permissions for this user.',
                related_name='user_set',
                related_query_name='user',
                to='auth.permission',
                verbose_name='user permissions',
            ),
        ),
    ]
